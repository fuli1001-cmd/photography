<?xml version="1.0"?>
<doc>
    <assembly>
        <name>User.API</name>
    </assembly>
    <members>
        <member name="P:Photography.Services.User.API.Application.Commands.Group.ChangeGroupOwner.ChangeGroupOwnerCommand.NewOwnerId">
            <summary>
            新的群主id
            </summary>
        </member>
        <member name="T:Photography.Services.User.API.Application.Commands.Group.EnableModifyMember.EnableModifyMemberCommand">
            <summary>
            允许群成员加人
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Application.Commands.Group.MuteGroup.MuteGroupCommand.GroupId">
            <summary>
            要免打扰的群id
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Application.Commands.Group.MuteGroup.MuteGroupCommand.Muted">
            <summary>
            true：不接收消息（免打扰）
            false：接收消息
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Application.Commands.User.MuteUser.MuteUserCommand.UserId">
            <summary>
            要免打扰的用户id
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Application.Commands.User.MuteUser.MuteUserCommand.Muted">
            <summary>
            true：不接收消息（免打扰）
            false：接收消息
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Application.Commands.User.ToggleFollow.ToggleFollowCommand.UserIdToFollow">
            <summary>
            要follow的用户id
            </summary>
        </member>
        <member name="M:Photography.Services.User.API.BackwardCompatibility.Utils.Encryptor.GetMD5_32(System.String,System.String)">
            <summary>  
            SHA1加密字符串  
            </summary>  
            <param name="source">源字符串</param>  
            <returns>加密后的字符串</returns>  
        </member>
        <member name="M:Photography.Services.User.API.BackwardCompatibility.Utils.Encryptor.EncryptDES(System.String,System.String)">
            <summary>  
            DES加密字符串  
            </summary>  
            <param name="encryptString">待加密的字符串</param>  
            <param name="encryptKey">加密密钥,要求为8位</param>  
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>  
        </member>
        <member name="M:Photography.Services.User.API.BackwardCompatibility.Utils.Encryptor.DecryptDES(System.String,System.String)">
            <summary>  
            DES解密字符串  
            </summary>  
            <param name="decryptString">待解密的字符串</param>  
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>  
            <returns>解密成功返回解密后的字符串，失败返源串</returns>  
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.CreateGroupAsync(Photography.Services.User.API.Application.Commands.Group.CreateGroup.CreateGroupCommand)">
            <summary>
            建群
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.UpdateGroupAsync(Photography.Services.User.API.Application.Commands.Group.UpdateGroup.UpdateGroupCommand)">
            <summary>
            编辑群
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.DeleteGroupAsync(Photography.Services.User.API.Application.Commands.Group.DeleteGroup.DeleteGroupCommand)">
            <summary>
            解散群
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.ChangeGroupOwnerAsync(Photography.Services.User.API.Application.Commands.Group.ChangeGroupOwner.ChangeGroupOwnerCommand)">
            <summary>
            更改群主
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.MuteGroupAsync(Photography.Services.User.API.Application.Commands.Group.MuteGroup.MuteGroupCommand)">
            <summary>
            设置群免打扰
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.MuteGroupAsync(Photography.Services.User.API.Application.Commands.Group.EnableModifyMember.EnableModifyMemberCommand)">
            <summary>
            设置允许群成员添加/删除群成员
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.ModifyGroupMembersAsync(Photography.Services.User.API.Application.Commands.Group.ModifyGroupMembers.ModifyGroupMembersCommand)">
            <summary>
            增加/删除群成员
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.QuitGroupAsync(Photography.Services.User.API.Application.Commands.Group.QuitGroup.QuitGroupCommand)">
            <summary>
            退出群
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.GetGroupAsync(System.Nullable{System.Guid},System.Nullable{System.Int32})">
            <summary>
            获取群信息
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.GroupsController.GetGroupsAsync(Arise.DDD.API.Paging.PagingParameters)">
            <summary>
            用户的群列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.LoginAsync(Photography.Services.User.API.Application.Commands.Login.LoginCommand)">
            <summary>
            登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.GetInfoAsync">
            <summary>
            获取当前用户及配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.GetCurrentUserAsync">
            <summary>
            获取当前用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.GetUserAsync(System.Nullable{System.Guid},System.Nullable{System.Int32},System.String)">
            <summary>
            获取用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.UpdateUserAsync(Photography.Services.User.API.Application.Commands.User.UpdateUser.UpdateUserCommand)">
            <summary>
            更新用户
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.UpdateBackgroundImageAsync(Photography.Services.User.API.Application.Commands.User.UpdateBackground.UpdateBackgroundCommand)">
            <summary>
            更新背景图
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.GetFriendsAsync">
            <summary>
            获取朋友列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.ToggleFollowAsync(Photography.Services.User.API.Application.Commands.User.ToggleFollow.ToggleFollowCommand)">
            <summary>
            关注或取消关注
            </summary>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.GetFollowersAsync(System.Guid)">
            <summary>
            获取用户的关注者
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.GetFollowedUsersAsync(System.Guid)">
            <summary>
            获取用户关注的人
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.GetUserAsync(System.String)">
            <summary>
            根据昵称搜索用户
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Photography.Services.User.API.Controllers.UsersController.MuteUserAsync(Photography.Services.User.API.Application.Commands.User.MuteUser.MuteUserCommand)">
            <summary>
            设置用户免打扰
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.ChatSocket">
            <summary>
            聊天socket服务器地址
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.ChatSocketPort">
            <summary>
            聊天socket服务器端口
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.ChatAPI">
            <summary>
            聊天服务API地址
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.ChatAPIPort">
            <summary>
            聊天服务API端口
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.FileServer">
            <summary>
            文件服务器地址
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.FileServerPort">
            <summary>
            文件服务器端口
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.ChatFileServer">
            <summary>
            聊天文件服务器地址
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.ChatFileServerPort">
            <summary>
            聊天文件服务器端口
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.AgoraAppId">
            <summary>
            声网appId
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.TrtcAppId">
            <summary>
            腾讯语音appId
            </summary>
        </member>
        <member name="P:Photography.Services.User.API.Settings.ServerSettings.TrtcEnabled">
            <summary>
            腾讯语音是否启用
            </summary>
        </member>
    </members>
</doc>
